name: ignition-robotics
version: "citadel"
summary: Ignition
description: |
  Ignition Robotics is a curated set of open-source libraries
  that encapsulate all the essentials for robotic simulation.

grade: devel
confinement: strict
base: core18

parts:

  dart:
    plugin: nil
    override-pull: |
      apt --yes install software-properties-common
      apt-add-repository -yu ppa:dartsim/ppa
      apt install -y \
        dart6-data \
        libdart6-dev \
        libdart6-collision-ode-dev \
        libdart6-external-odelcpsolver-dev \
        libdart6-utils-urdf-dev
    build-packages: [software-properties-common]

  ogre2:
    plugin: nil
    override-pull: |
      apt-key adv --fetch-keys http://packages.osrfoundation.org/gazebo.key
      apt-add-repository -yu http://packages.osrfoundation.org/gazebo/ubuntu-stable
      apt install -y libogre-1.9-dev libogre-2.1-dev
    build-packages: [software-properties-common, dirmngr]

  ignition:
    after: [dart, ogre2]
    plugin: colcon
    source: .
    colcon-cmake-args:
      - "-DBUILD_TESTING=OFF"
      - "-DENABLE_TESTING=OFF"
      - "-DKDE_INSTALL_USE_QT_SYS_PATHS=ON"
      - "-DKDE_SKIP_TEST_SETTINGS=ON"
    build-snaps:
      - kde-frameworks-5-core18-sdk
      - kde-frameworks-5-core18
    build-packages:
      - make
      - gcc
      - g++
      - wget
      - git
      - python3-vcstool
      - libavcodec-dev
      - libavdevice-dev
      - libavformat-dev
      - libavutil-dev
      - libfreeimage-dev
      - libgflags-dev
      - libglew-dev
      - libgts-dev
      - libprotobuf-dev
      - libprotoc-dev
      - libswscale-dev
      - libtinyxml2-dev
      - libtinyxml-dev
      - pkg-config
      - protobuf-compiler
      - python
      - ruby-dev
      - uuid-dev
      - libzip-dev
      - libjsoncpp-dev
      - libcurl4-openssl-dev
      - libyaml-dev
      - libzmq3-dev
      - libsqlite3-dev
      - libwebsockets-dev
      - swig
      - qtbase5-dev
      - qtdeclarative5-dev
      - qtquickcontrols2-5-dev
    stage-packages:
      - libassimp4
      - libboost-filesystem1.65.1
      - libboost-regex1.65.1
      - libboost-system1.65.1
      - libboost-thread1.65.1
      - libccd2
      - libconsole-bridge0.4
      - libev4
      - libfcl0.5
      - libfreeimage3
      - libgts-0.7-5
      - libilmbase12
      - libjxr0
      - libnorm1
      - liboctomap1.8
      - libode6
      - libopenexr22
      - libpgm-5.2-0
      - libprotobuf10
      - libraw16
      - libruby2.5
      - libsodium23
      - libtinyxml2-6
      - libtinyxml2.6.2v5
      - liburdfdom-model
      - libwebsockets8
      - libxaw7
      - libxmu6
      - libxpm4
      - libxt6
      - libzmq5
      - libzzip-0-13
      #
      # libdart6* (non-dev) are available in both dartsim and OSRF ppa's but at different versions
      # we install '-dev' versions to make sure that we have the same version at build/stage phases
      - dart6-data
      - libdart6-dev
      - libdart6-utils-urdf-dev
      - libdart6-collision-ode-dev
      - libdart6-external-odelcpsolver-dev
      #
      - libogre-1.9.0v5
      - libogre-2.1
    override-pull: |
      mkdir src && cd src
      if [ ! -f collection-citadel.yaml ]; then wget https://raw.githubusercontent.com/ignition-tooling/gazebodistro/master/collection-citadel.yaml; fi
      vcs import < collection-citadel.yaml
      sed -i "s|\${CMAKE_INSTALL_PREFIX}|/snap/$SNAPCRAFT_PROJECT_NAME/current/opt/ros/snap|" ign-gazebo/include/ignition/gazebo/config.hh.in
      sed -i "s|\${CMAKE_INSTALL_PREFIX}|/snap/$SNAPCRAFT_PROJECT_NAME/current/opt/ros/snap|" ign-gui/include/ignition/gui/config.hh.in
      sed -i "s|IGN_RENDERING_PLUGIN_PATH|\"/snap/$SNAPCRAFT_PROJECT_NAME/current/opt/ros/snap/lib\"|" ign-rendering/src/RenderEngineManager.cc
      sed -i "s|OGRE2_RESOURCE_PATH|\"/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/OGRE-2.1/OGRE\"|" ign-rendering/ogre2/src/Ogre2RenderEngine.cc
      sed -i "s|OGRE_RESOURCE_PATH|\"/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/OGRE-1.9.0\"|" ign-rendering/ogre/src/OgreRenderEngine.cc
      sed -i "s|@IGN_SENSORS_PLUGIN_PATH@|/snap/$SNAPCRAFT_PROJECT_NAME/current/opt/ros/snap/lib|" ign-sensors/include/ignition/sensors/config.hh.in
    override-build: |
      snapcraftctl build
      for entry in "$SNAPCRAFT_PART_INSTALL/opt/ros/snap/share/ignition"/*.yaml; do
        sed -i "s|$SNAPCRAFT_PART_INSTALL|/snap/$SNAPCRAFT_PROJECT_NAME/current|" "$entry"
      done

apps:
  ign:
    environment:
      RUBYLIB: '$SNAP/usr/local/lib/site_ruby/2.5.0:$SNAP/usr/local/lib/$SNAPCRAFT_ARCH_TRIPLET/site_ruby:$SNAP/usr/local/lib/site_ruby:$SNAP/usr/lib/ruby/vendor_ruby/2.5.0:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/ruby/vendor_ruby/2.5.0:$SNAP/usr/lib/ruby/vendor_ruby:$SNAP/usr/lib/ruby/2.5.0:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/ruby/2.5.0'
      IGN_HOMEDIR: '$SNAP_USER_DATA'
      IGN_CONFIG_PATH: '$SNAP/opt/ros/snap/share/ignition'
      IGN_GUI_PLUGIN_PATH: '$SNAP/opt/ros/snap/lib/ign-gazebo-3/plugins'
      IGN_RENDERING_PLUGIN_PATH: '$SNAP/opt/ros/snap/lib'
      IGN_RENDERING_RESOURCE_PATH: '$SNAP/opt/ros/snap/share/ignition/ignition-rendering3'
      IGN_GAZEBO_PHYSICS_ENGINE_PATH: '$SNAP/opt/ros/snap/lib/ign-physics-2/engine-plugins'
    command: usr/bin/ruby $SNAP/opt/ros/snap/bin/ign
    plugs: [network, network-bind, opengl, home]
    extensions: [kde-neon]
